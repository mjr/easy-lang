// Gerado por GNU Bison 3.8.2.
// Relate erros para <bug-bison@gnu.org>.
// Site: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: • programa $end\l"]
  0 -> 1 [style=solid label="FUNC"]
  0 -> 2 [style=dashed label="programa"]
  0 -> 3 [style=dashed label="subps"]
  0 -> 4 [style=dashed label="subp"]
  0 -> 5 [style=dashed label="funcao"]
  0 -> 6 [style=dashed label="procedimento"]
  0 -> "0R2" [style=solid]
 "0R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  1 [label="Estado 1\n\l  6 funcao: FUNC • TYPE ID '(' args ')' instructions ENDFUNC\l  7 procedimento: FUNC • ID '(' args ')' instructions ENDFUNC\l"]
  1 -> 7 [style=solid label="ID"]
  1 -> 8 [style=solid label="TYPE"]
  2 [label="Estado 2\n\l  0 $accept: programa • $end\l"]
  2 -> 9 [style=solid label="$end"]
  3 [label="Estado 3\n\l  1 programa: subps • instructions\l"]
  3 -> 10 [style=solid label="ID"]
  3 -> 11 [style=solid label="TYPE"]
  3 -> 12 [style=solid label="WHILE"]
  3 -> 13 [style=solid label="IF"]
  3 -> 14 [style=solid label="FOR"]
  3 -> 15 [style=solid label="PRINT"]
  3 -> 16 [style=dashed label="instructions"]
  3 -> 17 [style=dashed label="var_declarations"]
  3 -> 18 [style=dashed label="direct_assignment"]
  3 -> 19 [style=dashed label="unary_op"]
  3 -> 20 [style=dashed label="conditional_if"]
  3 -> 21 [style=dashed label="while_loop"]
  3 -> 22 [style=dashed label="for_loop"]
  3 -> 23 [style=dashed label="print"]
  3 -> "3R13" [style=solid]
 "3R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  4 [label="Estado 4\n\l  3 subps: subp • subps\l"]
  4 -> 1 [style=solid label="FUNC"]
  4 -> 24 [style=dashed label="subps"]
  4 -> 4 [style=dashed label="subp"]
  4 -> 5 [style=dashed label="funcao"]
  4 -> 6 [style=dashed label="procedimento"]
  4 -> "4R2" [style=solid]
 "4R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  5 [label="Estado 5\n\l  4 subp: funcao •\l"]
  5 -> "5R4" [style=solid]
 "5R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  6 [label="Estado 6\n\l  5 subp: procedimento •\l"]
  6 -> "6R5" [style=solid]
 "6R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  7 [label="Estado 7\n\l  7 procedimento: FUNC ID • '(' args ')' instructions ENDFUNC\l"]
  7 -> 25 [style=solid label="'('"]
  8 [label="Estado 8\n\l  6 funcao: FUNC TYPE • ID '(' args ')' instructions ENDFUNC\l"]
  8 -> 26 [style=solid label="ID"]
  9 [label="Estado 9\n\l  0 $accept: programa $end •\l"]
  9 -> "9R0" [style=solid]
 "9R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  10 [label="Estado 10\n\l 42 direct_assignment: ID • ASSIGNMENT expression\l 43 unary_op: ID • ADITION_ASSIGNMENT\l 44         | ID • INCREMENT\l 45         | ID • DECREMENT\l 46         | ID • SUBTRACTION_ASSIGNMENT\l"]
  10 -> 27 [style=solid label="ASSIGNMENT"]
  10 -> 28 [style=solid label="DECREMENT"]
  10 -> 29 [style=solid label="INCREMENT"]
  10 -> 30 [style=solid label="SUBTRACTION_ASSIGNMENT"]
  10 -> 31 [style=solid label="ADITION_ASSIGNMENT"]
  11 [label="Estado 11\n\l 21 var_declarations: TYPE • var_list\l"]
  11 -> 32 [style=solid label="ID"]
  11 -> 33 [style=dashed label="var_list"]
  11 -> 34 [style=dashed label="variable"]
  12 [label="Estado 12\n\l 49 while_loop: WHILE • '(' expression ')' instructions ENDWHILE\l"]
  12 -> 35 [style=solid label="'('"]
  13 [label="Estado 13\n\l 47 conditional_if: IF • '(' expression ')' instructions ENDIF\l 48               | IF • '(' expression ')' instructions ELSE instructions ENDIF\l"]
  13 -> 36 [style=solid label="'('"]
  14 [label="Estado 14\n\l 50 for_loop: FOR • '(' var_declarations ';' expression ';' unary_op ')' instructions ENDFOR\l"]
  14 -> 37 [style=solid label="'('"]
  15 [label="Estado 15\n\l 51 print: PRINT • '(' texts ')'\l"]
  15 -> 38 [style=solid label="'('"]
  16 [label="Estado 16\n\l  1 programa: subps instructions •\l"]
  16 -> "16R1" [style=solid]
 "16R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  17 [label="Estado 17\n\l 14 instructions: var_declarations • instructions\l"]
  17 -> 10 [style=solid label="ID"]
  17 -> 11 [style=solid label="TYPE"]
  17 -> 12 [style=solid label="WHILE"]
  17 -> 13 [style=solid label="IF"]
  17 -> 14 [style=solid label="FOR"]
  17 -> 15 [style=solid label="PRINT"]
  17 -> 39 [style=dashed label="instructions"]
  17 -> 17 [style=dashed label="var_declarations"]
  17 -> 18 [style=dashed label="direct_assignment"]
  17 -> 19 [style=dashed label="unary_op"]
  17 -> 20 [style=dashed label="conditional_if"]
  17 -> 21 [style=dashed label="while_loop"]
  17 -> 22 [style=dashed label="for_loop"]
  17 -> 23 [style=dashed label="print"]
  17 -> "17R13" [style=solid]
 "17R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  18 [label="Estado 18\n\l 15 instructions: direct_assignment • instructions\l"]
  18 -> 10 [style=solid label="ID"]
  18 -> 11 [style=solid label="TYPE"]
  18 -> 12 [style=solid label="WHILE"]
  18 -> 13 [style=solid label="IF"]
  18 -> 14 [style=solid label="FOR"]
  18 -> 15 [style=solid label="PRINT"]
  18 -> 40 [style=dashed label="instructions"]
  18 -> 17 [style=dashed label="var_declarations"]
  18 -> 18 [style=dashed label="direct_assignment"]
  18 -> 19 [style=dashed label="unary_op"]
  18 -> 20 [style=dashed label="conditional_if"]
  18 -> 21 [style=dashed label="while_loop"]
  18 -> 22 [style=dashed label="for_loop"]
  18 -> 23 [style=dashed label="print"]
  18 -> "18R13" [style=solid]
 "18R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  19 [label="Estado 19\n\l 16 instructions: unary_op • instructions\l"]
  19 -> 10 [style=solid label="ID"]
  19 -> 11 [style=solid label="TYPE"]
  19 -> 12 [style=solid label="WHILE"]
  19 -> 13 [style=solid label="IF"]
  19 -> 14 [style=solid label="FOR"]
  19 -> 15 [style=solid label="PRINT"]
  19 -> 41 [style=dashed label="instructions"]
  19 -> 17 [style=dashed label="var_declarations"]
  19 -> 18 [style=dashed label="direct_assignment"]
  19 -> 19 [style=dashed label="unary_op"]
  19 -> 20 [style=dashed label="conditional_if"]
  19 -> 21 [style=dashed label="while_loop"]
  19 -> 22 [style=dashed label="for_loop"]
  19 -> 23 [style=dashed label="print"]
  19 -> "19R13" [style=solid]
 "19R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  20 [label="Estado 20\n\l 17 instructions: conditional_if • instructions\l"]
  20 -> 10 [style=solid label="ID"]
  20 -> 11 [style=solid label="TYPE"]
  20 -> 12 [style=solid label="WHILE"]
  20 -> 13 [style=solid label="IF"]
  20 -> 14 [style=solid label="FOR"]
  20 -> 15 [style=solid label="PRINT"]
  20 -> 42 [style=dashed label="instructions"]
  20 -> 17 [style=dashed label="var_declarations"]
  20 -> 18 [style=dashed label="direct_assignment"]
  20 -> 19 [style=dashed label="unary_op"]
  20 -> 20 [style=dashed label="conditional_if"]
  20 -> 21 [style=dashed label="while_loop"]
  20 -> 22 [style=dashed label="for_loop"]
  20 -> 23 [style=dashed label="print"]
  20 -> "20R13" [style=solid]
 "20R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  21 [label="Estado 21\n\l 18 instructions: while_loop • instructions\l"]
  21 -> 10 [style=solid label="ID"]
  21 -> 11 [style=solid label="TYPE"]
  21 -> 12 [style=solid label="WHILE"]
  21 -> 13 [style=solid label="IF"]
  21 -> 14 [style=solid label="FOR"]
  21 -> 15 [style=solid label="PRINT"]
  21 -> 43 [style=dashed label="instructions"]
  21 -> 17 [style=dashed label="var_declarations"]
  21 -> 18 [style=dashed label="direct_assignment"]
  21 -> 19 [style=dashed label="unary_op"]
  21 -> 20 [style=dashed label="conditional_if"]
  21 -> 21 [style=dashed label="while_loop"]
  21 -> 22 [style=dashed label="for_loop"]
  21 -> 23 [style=dashed label="print"]
  21 -> "21R13" [style=solid]
 "21R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  22 [label="Estado 22\n\l 19 instructions: for_loop • instructions\l"]
  22 -> 10 [style=solid label="ID"]
  22 -> 11 [style=solid label="TYPE"]
  22 -> 12 [style=solid label="WHILE"]
  22 -> 13 [style=solid label="IF"]
  22 -> 14 [style=solid label="FOR"]
  22 -> 15 [style=solid label="PRINT"]
  22 -> 44 [style=dashed label="instructions"]
  22 -> 17 [style=dashed label="var_declarations"]
  22 -> 18 [style=dashed label="direct_assignment"]
  22 -> 19 [style=dashed label="unary_op"]
  22 -> 20 [style=dashed label="conditional_if"]
  22 -> 21 [style=dashed label="while_loop"]
  22 -> 22 [style=dashed label="for_loop"]
  22 -> 23 [style=dashed label="print"]
  22 -> "22R13" [style=solid]
 "22R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  23 [label="Estado 23\n\l 20 instructions: print • instructions\l"]
  23 -> 10 [style=solid label="ID"]
  23 -> 11 [style=solid label="TYPE"]
  23 -> 12 [style=solid label="WHILE"]
  23 -> 13 [style=solid label="IF"]
  23 -> 14 [style=solid label="FOR"]
  23 -> 15 [style=solid label="PRINT"]
  23 -> 45 [style=dashed label="instructions"]
  23 -> 17 [style=dashed label="var_declarations"]
  23 -> 18 [style=dashed label="direct_assignment"]
  23 -> 19 [style=dashed label="unary_op"]
  23 -> 20 [style=dashed label="conditional_if"]
  23 -> 21 [style=dashed label="while_loop"]
  23 -> 22 [style=dashed label="for_loop"]
  23 -> 23 [style=dashed label="print"]
  23 -> "23R13" [style=solid]
 "23R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  24 [label="Estado 24\n\l  3 subps: subp subps •\l"]
  24 -> "24R3" [style=solid]
 "24R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  25 [label="Estado 25\n\l  7 procedimento: FUNC ID '(' • args ')' instructions ENDFUNC\l"]
  25 -> 46 [style=solid label="TYPE"]
  25 -> 47 [style=dashed label="args"]
  25 -> 48 [style=dashed label="args_aux"]
  25 -> "25R8" [style=solid]
 "25R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  26 [label="Estado 26\n\l  6 funcao: FUNC TYPE ID • '(' args ')' instructions ENDFUNC\l"]
  26 -> 49 [style=solid label="'('"]
  27 [label="Estado 27\n\l 42 direct_assignment: ID ASSIGNMENT • expression\l"]
  27 -> 50 [style=solid label="ID"]
  27 -> 51 [style=dashed label="expression"]
  28 [label="Estado 28\n\l 45 unary_op: ID DECREMENT •\l"]
  28 -> "28R45" [style=solid]
 "28R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  29 [label="Estado 29\n\l 44 unary_op: ID INCREMENT •\l"]
  29 -> "29R44" [style=solid]
 "29R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  30 [label="Estado 30\n\l 46 unary_op: ID SUBTRACTION_ASSIGNMENT •\l"]
  30 -> "30R46" [style=solid]
 "30R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  31 [label="Estado 31\n\l 43 unary_op: ID ADITION_ASSIGNMENT •\l"]
  31 -> "31R43" [style=solid]
 "31R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  32 [label="Estado 32\n\l 24 variable: ID •\l 25         | ID • LBRACKET ID RBRACKET\l 26         | ID • ASSIGNMENT expression\l 27         | ID • LBRACKET ID RBRACKET ASSIGNMENT expression\l"]
  32 -> 52 [style=solid label="ASSIGNMENT"]
  32 -> 53 [style=solid label="LBRACKET"]
  32 -> "32R24" [style=solid]
 "32R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  33 [label="Estado 33\n\l 21 var_declarations: TYPE var_list •\l"]
  33 -> "33R21" [style=solid]
 "33R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  34 [label="Estado 34\n\l 22 var_list: variable • ',' var_list\l 23         | variable •\l"]
  34 -> 54 [style=solid label="','"]
  34 -> "34R23" [style=solid]
 "34R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  35 [label="Estado 35\n\l 49 while_loop: WHILE '(' • expression ')' instructions ENDWHILE\l"]
  35 -> 50 [style=solid label="ID"]
  35 -> 55 [style=dashed label="expression"]
  36 [label="Estado 36\n\l 47 conditional_if: IF '(' • expression ')' instructions ENDIF\l 48               | IF '(' • expression ')' instructions ELSE instructions ENDIF\l"]
  36 -> 50 [style=solid label="ID"]
  36 -> 56 [style=dashed label="expression"]
  37 [label="Estado 37\n\l 50 for_loop: FOR '(' • var_declarations ';' expression ';' unary_op ')' instructions ENDFOR\l"]
  37 -> 11 [style=solid label="TYPE"]
  37 -> 57 [style=dashed label="var_declarations"]
  38 [label="Estado 38\n\l 51 print: PRINT '(' • texts ')'\l"]
  38 -> 58 [style=solid label="ID"]
  38 -> 59 [style=solid label="STRING"]
  38 -> 60 [style=dashed label="texts"]
  38 -> 61 [style=dashed label="text"]
  38 -> "38R54" [style=solid]
 "38R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  39 [label="Estado 39\n\l 14 instructions: var_declarations instructions •\l"]
  39 -> "39R14" [style=solid]
 "39R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  40 [label="Estado 40\n\l 15 instructions: direct_assignment instructions •\l"]
  40 -> "40R15" [style=solid]
 "40R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  41 [label="Estado 41\n\l 16 instructions: unary_op instructions •\l"]
  41 -> "41R16" [style=solid]
 "41R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  42 [label="Estado 42\n\l 17 instructions: conditional_if instructions •\l"]
  42 -> "42R17" [style=solid]
 "42R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 18 instructions: while_loop instructions •\l"]
  43 -> "43R18" [style=solid]
 "43R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  44 [label="Estado 44\n\l 19 instructions: for_loop instructions •\l"]
  44 -> "44R19" [style=solid]
 "44R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  45 [label="Estado 45\n\l 20 instructions: print instructions •\l"]
  45 -> "45R20" [style=solid]
 "45R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  46 [label="Estado 46\n\l 10 args_aux: TYPE • ID\l 11         | TYPE • ID LBRACKET RBRACKET ',' args_aux\l 12         | TYPE • ID ',' args_aux\l"]
  46 -> 62 [style=solid label="ID"]
  47 [label="Estado 47\n\l  7 procedimento: FUNC ID '(' args • ')' instructions ENDFUNC\l"]
  47 -> 63 [style=solid label="')'"]
  48 [label="Estado 48\n\l  9 args: args_aux •\l"]
  48 -> "48R9" [style=solid]
 "48R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  49 [label="Estado 49\n\l  6 funcao: FUNC TYPE ID '(' • args ')' instructions ENDFUNC\l"]
  49 -> 46 [style=solid label="TYPE"]
  49 -> 64 [style=dashed label="args"]
  49 -> 48 [style=dashed label="args_aux"]
  49 -> "49R8" [style=solid]
 "49R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  50 [label="Estado 50\n\l 28 expression: ID •\l 29           | ID • ASSIGNMENT expression\l 30           | ID • OP_PLUS expression\l 31           | ID • OP_MINUS expression\l 32           | ID • OP_DIV expression\l 33           | ID • OP_MULT expression\l 34           | ID • LESS_THAN expression\l 35           | ID • GREATER_THAN expression\l 36           | ID • EQUALS expression\l 37           | ID • LESS_THAN_OR_EQUAL expression\l 38           | ID • GREATER_THAN_OR_EQUAL expression\l 39           | ID • NOT_EQUALS expression\l 40           | ID • LOGICAL_AND expression\l 41           | ID • LOGICAL_OR expression\l"]
  50 -> 65 [style=solid label="ASSIGNMENT"]
  50 -> 66 [style=solid label="EQUALS"]
  50 -> 67 [style=solid label="NOT_EQUALS"]
  50 -> 68 [style=solid label="GREATER_THAN"]
  50 -> 69 [style=solid label="LESS_THAN"]
  50 -> 70 [style=solid label="GREATER_THAN_OR_EQUAL"]
  50 -> 71 [style=solid label="LESS_THAN_OR_EQUAL"]
  50 -> 72 [style=solid label="OP_PLUS"]
  50 -> 73 [style=solid label="OP_MINUS"]
  50 -> 74 [style=solid label="OP_DIV"]
  50 -> 75 [style=solid label="OP_MULT"]
  50 -> 76 [style=solid label="LOGICAL_AND"]
  50 -> 77 [style=solid label="LOGICAL_OR"]
  50 -> "50R28" [style=solid]
 "50R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  51 [label="Estado 51\n\l 42 direct_assignment: ID ASSIGNMENT expression •\l"]
  51 -> "51R42" [style=solid]
 "51R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  52 [label="Estado 52\n\l 26 variable: ID ASSIGNMENT • expression\l"]
  52 -> 50 [style=solid label="ID"]
  52 -> 78 [style=dashed label="expression"]
  53 [label="Estado 53\n\l 25 variable: ID LBRACKET • ID RBRACKET\l 27         | ID LBRACKET • ID RBRACKET ASSIGNMENT expression\l"]
  53 -> 79 [style=solid label="ID"]
  54 [label="Estado 54\n\l 22 var_list: variable ',' • var_list\l"]
  54 -> 32 [style=solid label="ID"]
  54 -> 80 [style=dashed label="var_list"]
  54 -> 34 [style=dashed label="variable"]
  55 [label="Estado 55\n\l 49 while_loop: WHILE '(' expression • ')' instructions ENDWHILE\l"]
  55 -> 81 [style=solid label="')'"]
  56 [label="Estado 56\n\l 47 conditional_if: IF '(' expression • ')' instructions ENDIF\l 48               | IF '(' expression • ')' instructions ELSE instructions ENDIF\l"]
  56 -> 82 [style=solid label="')'"]
  57 [label="Estado 57\n\l 50 for_loop: FOR '(' var_declarations • ';' expression ';' unary_op ')' instructions ENDFOR\l"]
  57 -> 83 [style=solid label="';'"]
  58 [label="Estado 58\n\l 56 text: ID •\l"]
  58 -> "58R56" [style=solid]
 "58R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  59 [label="Estado 59\n\l 55 text: STRING •\l"]
  59 -> "59R55" [style=solid]
 "59R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  60 [label="Estado 60\n\l 51 print: PRINT '(' texts • ')'\l"]
  60 -> 84 [style=solid label="')'"]
  61 [label="Estado 61\n\l 52 texts: text •\l 53      | text • ',' texts\l"]
  61 -> 85 [style=solid label="','"]
  61 -> "61R52" [style=solid]
 "61R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  62 [label="Estado 62\n\l 10 args_aux: TYPE ID •\l 11         | TYPE ID • LBRACKET RBRACKET ',' args_aux\l 12         | TYPE ID • ',' args_aux\l"]
  62 -> 86 [style=solid label="LBRACKET"]
  62 -> 87 [style=solid label="','"]
  62 -> "62R10" [style=solid]
 "62R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  63 [label="Estado 63\n\l  7 procedimento: FUNC ID '(' args ')' • instructions ENDFUNC\l"]
  63 -> 10 [style=solid label="ID"]
  63 -> 11 [style=solid label="TYPE"]
  63 -> 12 [style=solid label="WHILE"]
  63 -> 13 [style=solid label="IF"]
  63 -> 14 [style=solid label="FOR"]
  63 -> 15 [style=solid label="PRINT"]
  63 -> 88 [style=dashed label="instructions"]
  63 -> 17 [style=dashed label="var_declarations"]
  63 -> 18 [style=dashed label="direct_assignment"]
  63 -> 19 [style=dashed label="unary_op"]
  63 -> 20 [style=dashed label="conditional_if"]
  63 -> 21 [style=dashed label="while_loop"]
  63 -> 22 [style=dashed label="for_loop"]
  63 -> 23 [style=dashed label="print"]
  63 -> "63R13" [style=solid]
 "63R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  64 [label="Estado 64\n\l  6 funcao: FUNC TYPE ID '(' args • ')' instructions ENDFUNC\l"]
  64 -> 89 [style=solid label="')'"]
  65 [label="Estado 65\n\l 29 expression: ID ASSIGNMENT • expression\l"]
  65 -> 50 [style=solid label="ID"]
  65 -> 90 [style=dashed label="expression"]
  66 [label="Estado 66\n\l 36 expression: ID EQUALS • expression\l"]
  66 -> 50 [style=solid label="ID"]
  66 -> 91 [style=dashed label="expression"]
  67 [label="Estado 67\n\l 39 expression: ID NOT_EQUALS • expression\l"]
  67 -> 50 [style=solid label="ID"]
  67 -> 92 [style=dashed label="expression"]
  68 [label="Estado 68\n\l 35 expression: ID GREATER_THAN • expression\l"]
  68 -> 50 [style=solid label="ID"]
  68 -> 93 [style=dashed label="expression"]
  69 [label="Estado 69\n\l 34 expression: ID LESS_THAN • expression\l"]
  69 -> 50 [style=solid label="ID"]
  69 -> 94 [style=dashed label="expression"]
  70 [label="Estado 70\n\l 38 expression: ID GREATER_THAN_OR_EQUAL • expression\l"]
  70 -> 50 [style=solid label="ID"]
  70 -> 95 [style=dashed label="expression"]
  71 [label="Estado 71\n\l 37 expression: ID LESS_THAN_OR_EQUAL • expression\l"]
  71 -> 50 [style=solid label="ID"]
  71 -> 96 [style=dashed label="expression"]
  72 [label="Estado 72\n\l 30 expression: ID OP_PLUS • expression\l"]
  72 -> 50 [style=solid label="ID"]
  72 -> 97 [style=dashed label="expression"]
  73 [label="Estado 73\n\l 31 expression: ID OP_MINUS • expression\l"]
  73 -> 50 [style=solid label="ID"]
  73 -> 98 [style=dashed label="expression"]
  74 [label="Estado 74\n\l 32 expression: ID OP_DIV • expression\l"]
  74 -> 50 [style=solid label="ID"]
  74 -> 99 [style=dashed label="expression"]
  75 [label="Estado 75\n\l 33 expression: ID OP_MULT • expression\l"]
  75 -> 50 [style=solid label="ID"]
  75 -> 100 [style=dashed label="expression"]
  76 [label="Estado 76\n\l 40 expression: ID LOGICAL_AND • expression\l"]
  76 -> 50 [style=solid label="ID"]
  76 -> 101 [style=dashed label="expression"]
  77 [label="Estado 77\n\l 41 expression: ID LOGICAL_OR • expression\l"]
  77 -> 50 [style=solid label="ID"]
  77 -> 102 [style=dashed label="expression"]
  78 [label="Estado 78\n\l 26 variable: ID ASSIGNMENT expression •\l"]
  78 -> "78R26" [style=solid]
 "78R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  79 [label="Estado 79\n\l 25 variable: ID LBRACKET ID • RBRACKET\l 27         | ID LBRACKET ID • RBRACKET ASSIGNMENT expression\l"]
  79 -> 103 [style=solid label="RBRACKET"]
  80 [label="Estado 80\n\l 22 var_list: variable ',' var_list •\l"]
  80 -> "80R22" [style=solid]
 "80R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  81 [label="Estado 81\n\l 49 while_loop: WHILE '(' expression ')' • instructions ENDWHILE\l"]
  81 -> 10 [style=solid label="ID"]
  81 -> 11 [style=solid label="TYPE"]
  81 -> 12 [style=solid label="WHILE"]
  81 -> 13 [style=solid label="IF"]
  81 -> 14 [style=solid label="FOR"]
  81 -> 15 [style=solid label="PRINT"]
  81 -> 104 [style=dashed label="instructions"]
  81 -> 17 [style=dashed label="var_declarations"]
  81 -> 18 [style=dashed label="direct_assignment"]
  81 -> 19 [style=dashed label="unary_op"]
  81 -> 20 [style=dashed label="conditional_if"]
  81 -> 21 [style=dashed label="while_loop"]
  81 -> 22 [style=dashed label="for_loop"]
  81 -> 23 [style=dashed label="print"]
  81 -> "81R13" [style=solid]
 "81R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 47 conditional_if: IF '(' expression ')' • instructions ENDIF\l 48               | IF '(' expression ')' • instructions ELSE instructions ENDIF\l"]
  82 -> 10 [style=solid label="ID"]
  82 -> 11 [style=solid label="TYPE"]
  82 -> 12 [style=solid label="WHILE"]
  82 -> 13 [style=solid label="IF"]
  82 -> 14 [style=solid label="FOR"]
  82 -> 15 [style=solid label="PRINT"]
  82 -> 105 [style=dashed label="instructions"]
  82 -> 17 [style=dashed label="var_declarations"]
  82 -> 18 [style=dashed label="direct_assignment"]
  82 -> 19 [style=dashed label="unary_op"]
  82 -> 20 [style=dashed label="conditional_if"]
  82 -> 21 [style=dashed label="while_loop"]
  82 -> 22 [style=dashed label="for_loop"]
  82 -> 23 [style=dashed label="print"]
  82 -> "82R13" [style=solid]
 "82R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  83 [label="Estado 83\n\l 50 for_loop: FOR '(' var_declarations ';' • expression ';' unary_op ')' instructions ENDFOR\l"]
  83 -> 50 [style=solid label="ID"]
  83 -> 106 [style=dashed label="expression"]
  84 [label="Estado 84\n\l 51 print: PRINT '(' texts ')' •\l"]
  84 -> "84R51" [style=solid]
 "84R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  85 [label="Estado 85\n\l 53 texts: text ',' • texts\l"]
  85 -> 58 [style=solid label="ID"]
  85 -> 59 [style=solid label="STRING"]
  85 -> 107 [style=dashed label="texts"]
  85 -> 61 [style=dashed label="text"]
  85 -> "85R54" [style=solid]
 "85R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  86 [label="Estado 86\n\l 11 args_aux: TYPE ID LBRACKET • RBRACKET ',' args_aux\l"]
  86 -> 108 [style=solid label="RBRACKET"]
  87 [label="Estado 87\n\l 12 args_aux: TYPE ID ',' • args_aux\l"]
  87 -> 46 [style=solid label="TYPE"]
  87 -> 109 [style=dashed label="args_aux"]
  88 [label="Estado 88\n\l  7 procedimento: FUNC ID '(' args ')' instructions • ENDFUNC\l"]
  88 -> 110 [style=solid label="ENDFUNC"]
  89 [label="Estado 89\n\l  6 funcao: FUNC TYPE ID '(' args ')' • instructions ENDFUNC\l"]
  89 -> 10 [style=solid label="ID"]
  89 -> 11 [style=solid label="TYPE"]
  89 -> 12 [style=solid label="WHILE"]
  89 -> 13 [style=solid label="IF"]
  89 -> 14 [style=solid label="FOR"]
  89 -> 15 [style=solid label="PRINT"]
  89 -> 111 [style=dashed label="instructions"]
  89 -> 17 [style=dashed label="var_declarations"]
  89 -> 18 [style=dashed label="direct_assignment"]
  89 -> 19 [style=dashed label="unary_op"]
  89 -> 20 [style=dashed label="conditional_if"]
  89 -> 21 [style=dashed label="while_loop"]
  89 -> 22 [style=dashed label="for_loop"]
  89 -> 23 [style=dashed label="print"]
  89 -> "89R13" [style=solid]
 "89R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  90 [label="Estado 90\n\l 29 expression: ID ASSIGNMENT expression •\l"]
  90 -> "90R29" [style=solid]
 "90R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  91 [label="Estado 91\n\l 36 expression: ID EQUALS expression •\l"]
  91 -> "91R36" [style=solid]
 "91R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  92 [label="Estado 92\n\l 39 expression: ID NOT_EQUALS expression •\l"]
  92 -> "92R39" [style=solid]
 "92R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  93 [label="Estado 93\n\l 35 expression: ID GREATER_THAN expression •\l"]
  93 -> "93R35" [style=solid]
 "93R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  94 [label="Estado 94\n\l 34 expression: ID LESS_THAN expression •\l"]
  94 -> "94R34" [style=solid]
 "94R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  95 [label="Estado 95\n\l 38 expression: ID GREATER_THAN_OR_EQUAL expression •\l"]
  95 -> "95R38" [style=solid]
 "95R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  96 [label="Estado 96\n\l 37 expression: ID LESS_THAN_OR_EQUAL expression •\l"]
  96 -> "96R37" [style=solid]
 "96R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  97 [label="Estado 97\n\l 30 expression: ID OP_PLUS expression •\l"]
  97 -> "97R30" [style=solid]
 "97R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  98 [label="Estado 98\n\l 31 expression: ID OP_MINUS expression •\l"]
  98 -> "98R31" [style=solid]
 "98R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  99 [label="Estado 99\n\l 32 expression: ID OP_DIV expression •\l"]
  99 -> "99R32" [style=solid]
 "99R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  100 [label="Estado 100\n\l 33 expression: ID OP_MULT expression •\l"]
  100 -> "100R33" [style=solid]
 "100R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  101 [label="Estado 101\n\l 40 expression: ID LOGICAL_AND expression •\l"]
  101 -> "101R40" [style=solid]
 "101R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  102 [label="Estado 102\n\l 41 expression: ID LOGICAL_OR expression •\l"]
  102 -> "102R41" [style=solid]
 "102R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  103 [label="Estado 103\n\l 25 variable: ID LBRACKET ID RBRACKET •\l 27         | ID LBRACKET ID RBRACKET • ASSIGNMENT expression\l"]
  103 -> 112 [style=solid label="ASSIGNMENT"]
  103 -> "103R25" [style=solid]
 "103R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  104 [label="Estado 104\n\l 49 while_loop: WHILE '(' expression ')' instructions • ENDWHILE\l"]
  104 -> 113 [style=solid label="ENDWHILE"]
  105 [label="Estado 105\n\l 47 conditional_if: IF '(' expression ')' instructions • ENDIF\l 48               | IF '(' expression ')' instructions • ELSE instructions ENDIF\l"]
  105 -> 114 [style=solid label="ELSE"]
  105 -> 115 [style=solid label="ENDIF"]
  106 [label="Estado 106\n\l 50 for_loop: FOR '(' var_declarations ';' expression • ';' unary_op ')' instructions ENDFOR\l"]
  106 -> 116 [style=solid label="';'"]
  107 [label="Estado 107\n\l 53 texts: text ',' texts •\l"]
  107 -> "107R53" [style=solid]
 "107R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  108 [label="Estado 108\n\l 11 args_aux: TYPE ID LBRACKET RBRACKET • ',' args_aux\l"]
  108 -> 117 [style=solid label="','"]
  109 [label="Estado 109\n\l 12 args_aux: TYPE ID ',' args_aux •\l"]
  109 -> "109R12" [style=solid]
 "109R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  110 [label="Estado 110\n\l  7 procedimento: FUNC ID '(' args ')' instructions ENDFUNC •\l"]
  110 -> "110R7" [style=solid]
 "110R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  111 [label="Estado 111\n\l  6 funcao: FUNC TYPE ID '(' args ')' instructions • ENDFUNC\l"]
  111 -> 118 [style=solid label="ENDFUNC"]
  112 [label="Estado 112\n\l 27 variable: ID LBRACKET ID RBRACKET ASSIGNMENT • expression\l"]
  112 -> 50 [style=solid label="ID"]
  112 -> 119 [style=dashed label="expression"]
  113 [label="Estado 113\n\l 49 while_loop: WHILE '(' expression ')' instructions ENDWHILE •\l"]
  113 -> "113R49" [style=solid]
 "113R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  114 [label="Estado 114\n\l 48 conditional_if: IF '(' expression ')' instructions ELSE • instructions ENDIF\l"]
  114 -> 10 [style=solid label="ID"]
  114 -> 11 [style=solid label="TYPE"]
  114 -> 12 [style=solid label="WHILE"]
  114 -> 13 [style=solid label="IF"]
  114 -> 14 [style=solid label="FOR"]
  114 -> 15 [style=solid label="PRINT"]
  114 -> 120 [style=dashed label="instructions"]
  114 -> 17 [style=dashed label="var_declarations"]
  114 -> 18 [style=dashed label="direct_assignment"]
  114 -> 19 [style=dashed label="unary_op"]
  114 -> 20 [style=dashed label="conditional_if"]
  114 -> 21 [style=dashed label="while_loop"]
  114 -> 22 [style=dashed label="for_loop"]
  114 -> 23 [style=dashed label="print"]
  114 -> "114R13" [style=solid]
 "114R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  115 [label="Estado 115\n\l 47 conditional_if: IF '(' expression ')' instructions ENDIF •\l"]
  115 -> "115R47" [style=solid]
 "115R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  116 [label="Estado 116\n\l 50 for_loop: FOR '(' var_declarations ';' expression ';' • unary_op ')' instructions ENDFOR\l"]
  116 -> 121 [style=solid label="ID"]
  116 -> 122 [style=dashed label="unary_op"]
  117 [label="Estado 117\n\l 11 args_aux: TYPE ID LBRACKET RBRACKET ',' • args_aux\l"]
  117 -> 46 [style=solid label="TYPE"]
  117 -> 123 [style=dashed label="args_aux"]
  118 [label="Estado 118\n\l  6 funcao: FUNC TYPE ID '(' args ')' instructions ENDFUNC •\l"]
  118 -> "118R6" [style=solid]
 "118R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  119 [label="Estado 119\n\l 27 variable: ID LBRACKET ID RBRACKET ASSIGNMENT expression •\l"]
  119 -> "119R27" [style=solid]
 "119R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  120 [label="Estado 120\n\l 48 conditional_if: IF '(' expression ')' instructions ELSE instructions • ENDIF\l"]
  120 -> 124 [style=solid label="ENDIF"]
  121 [label="Estado 121\n\l 43 unary_op: ID • ADITION_ASSIGNMENT\l 44         | ID • INCREMENT\l 45         | ID • DECREMENT\l 46         | ID • SUBTRACTION_ASSIGNMENT\l"]
  121 -> 28 [style=solid label="DECREMENT"]
  121 -> 29 [style=solid label="INCREMENT"]
  121 -> 30 [style=solid label="SUBTRACTION_ASSIGNMENT"]
  121 -> 31 [style=solid label="ADITION_ASSIGNMENT"]
  122 [label="Estado 122\n\l 50 for_loop: FOR '(' var_declarations ';' expression ';' unary_op • ')' instructions ENDFOR\l"]
  122 -> 125 [style=solid label="')'"]
  123 [label="Estado 123\n\l 11 args_aux: TYPE ID LBRACKET RBRACKET ',' args_aux •\l"]
  123 -> "123R11" [style=solid]
 "123R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  124 [label="Estado 124\n\l 48 conditional_if: IF '(' expression ')' instructions ELSE instructions ENDIF •\l"]
  124 -> "124R48" [style=solid]
 "124R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  125 [label="Estado 125\n\l 50 for_loop: FOR '(' var_declarations ';' expression ';' unary_op ')' • instructions ENDFOR\l"]
  125 -> 10 [style=solid label="ID"]
  125 -> 11 [style=solid label="TYPE"]
  125 -> 12 [style=solid label="WHILE"]
  125 -> 13 [style=solid label="IF"]
  125 -> 14 [style=solid label="FOR"]
  125 -> 15 [style=solid label="PRINT"]
  125 -> 126 [style=dashed label="instructions"]
  125 -> 17 [style=dashed label="var_declarations"]
  125 -> 18 [style=dashed label="direct_assignment"]
  125 -> 19 [style=dashed label="unary_op"]
  125 -> 20 [style=dashed label="conditional_if"]
  125 -> 21 [style=dashed label="while_loop"]
  125 -> 22 [style=dashed label="for_loop"]
  125 -> 23 [style=dashed label="print"]
  125 -> "125R13" [style=solid]
 "125R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  126 [label="Estado 126\n\l 50 for_loop: FOR '(' var_declarations ';' expression ';' unary_op ')' instructions • ENDFOR\l"]
  126 -> 127 [style=solid label="ENDFOR"]
  127 [label="Estado 127\n\l 50 for_loop: FOR '(' var_declarations ';' expression ';' unary_op ')' instructions ENDFOR •\l"]
  127 -> "127R50" [style=solid]
 "127R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
}
